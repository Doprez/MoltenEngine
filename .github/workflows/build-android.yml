name: Android [Debug]

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
     PLATFORM: x64
     PLATFORM_NAME: android
     CONFIG_NAME: Android_Debug
     DOTNET_INSTALL_DIR: ./.dotnet-$CONFIG_NAME
     RELEASE_TAG_NAME: android_dev_debug
    
    steps:
    - name: Checkout Git Repo
      uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
        
    - name: Install Android Workload
      run: dotnet workload install android
      
    #- name: Test
    #  run: dotnet test --no-build --verbosity normal

    - name: Build Debug
      run: dotnet build /p:Platform="$PLATFORM" --configuration $CONFIG_NAME

    - name: Publish Artifacts
      run: dotnet publish --configuration $CONFIG_NAME --output ./publish

    - name: Zip build output
      run: zip -r android_dev_debug.zip ./publish

    - name: Delete old dev release
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: releases } = await github.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
            });
            const releaseToDelete = releases.find(release => release.tag_name === '$RELEASE_TAG_NAME');
            if (releaseToDelete) {
              await github.repos.deleteRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: releaseToDelete.id,
              });
              console.log(`Deleted release ${releaseToDelete.tag_name}`);
            } else {
              console.log('Release not found');
            }

    - name: Create Release
      id: build_create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{env.RELEASE_TAG_NAME}}
        release_name: Latest - Development
        body: |
          This is the latest development build.
        draft: false
        prerelease: false

    - name: Upload release Zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.build_create_release.outputs.upload_url }}
        asset_path: ./android_dev_debug.zip
        asset_name: android_dev_debug.zip
        asset_content_type: application/zip